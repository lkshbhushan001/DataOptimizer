{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\GitHub\\\\DataOptimizer\\\\Frontend\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFile } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [processedData, setProcessedData] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please upload a file!\");\n      return;\n    }\n    try {\n      const data = await uploadFile(file);\n      setProcessedData(data.cleaned_data);\n    } catch (error) {\n      alert(\"Error processing file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload and Process File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), processedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processed Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(JSON.parse(processedData), null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"W/PB1LpGtClH2ON9yzNHlFvm4IU=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","uploadFile","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","processedData","setProcessedData","handleFileChange","event","target","files","handleUpload","alert","data","cleaned_data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","JSON","stringify","parse","_c","$RefreshReg$"],"sources":["E:/Project/GitHub/DataOptimizer/Frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { uploadFile } from '../services/api';\r\n\r\nconst FileUpload = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [processedData, setProcessedData] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) {\r\n            alert(\"Please upload a file!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const data = await uploadFile(file);\r\n            setProcessedData(data.cleaned_data);\r\n        } catch (error) {\r\n            alert(\"Error processing file.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Upload and Process File</h2>\r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload</button>\r\n\r\n            {processedData && (\r\n                <div>\r\n                    <h3>Processed Data:</h3>\r\n                    <pre>{JSON.stringify(JSON.parse(processedData), null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,IAAI,EAAE;MACPS,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACJ;IAEA,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMf,UAAU,CAACK,IAAI,CAAC;MACnCG,gBAAgB,CAACO,IAAI,CAACC,YAAY,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,KAAK,CAAC,wBAAwB,CAAC;IACnC;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEf;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDpB,OAAA;MAAQuB,OAAO,EAAEZ,YAAa;MAAAK,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE7Cf,aAAa,iBACVL,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBpB,OAAA;QAAAgB,QAAA,EAAMQ,IAAI,CAACC,SAAS,CAACD,IAAI,CAACE,KAAK,CAACrB,aAAa,CAAC,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClB,EAAA,CApCID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}